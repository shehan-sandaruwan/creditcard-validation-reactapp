{"ast":null,"code":"import _classCallCheck from \"/home/shehand/Documents/Noetic/creditcard-validator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shehand/Documents/Noetic/creditcard-validator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shehand/Documents/Noetic/creditcard-validator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shehand/Documents/Noetic/creditcard-validator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shehand/Documents/Noetic/creditcard-validator/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/shehand/Documents/Noetic/creditcard-validator/src/Component/cardDetails.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { connect } from \"react-redux\";\nimport { swapCard } from '../action/textfield-onclick-action';\nimport { updateCardValues } from '../action/update-cardvalue-action';\nimport { bindActionCreators } from \"redux\";\nimport { creditCardValidator } from '../service/validator';\nimport NumberFormat from 'react-number-format';\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit\n    },\n    dense: {\n      marginTop: 16\n    },\n    menu: {\n      width: 200\n    }\n  };\n};\n\nvar FilledTextFields =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FilledTextFields, _React$Component);\n\n  function FilledTextFields() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FilledTextFields);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FilledTextFields)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      specialText: \"\",\n      error_state: false,\n      cardImage: \"\",\n      cardNumber: 0\n    };\n\n    _this.handleChange = function (event) {\n      var name = event.target.name;\n      var re = /^[0-9\\b]+$/;\n\n      if ((event.target.value === '' || re.test(event.target.value)) && name === 'cardNumber') {\n        var value = event.target.value;\n        console.log(value);\n        var payload = {\n          name: name,\n          value: value\n        };\n\n        _this.props.updateCardValues(payload);\n      }\n\n      if (name === 'cardName') {\n        payload = {\n          name: name,\n          value: event.target.value\n        };\n\n        _this.props.updateCardValues(payload);\n      }\n\n      if (name === 'expireDate') {\n        payload = {\n          name: name,\n          value: event.target.value\n        };\n\n        _this.props.updateCardValues(payload);\n      }\n\n      if (name === 'cardSecurityCode') {\n        payload = {\n          name: name,\n          value: event.target.value\n        };\n\n        _this.props.updateCardValues(payload);\n      }\n    };\n\n    _this.onKeyDown = function (event) {\n      var name = event.target.name;\n\n      if (event.keyCode === 8) {\n        var payload = {\n          name: name,\n          value: 0\n        };\n\n        _this.props.updateCardValues(payload);\n      }\n    };\n\n    _this.onClickOnTextField = function (event) {\n      var str = _this.props.cardNumber2.toString();\n\n      if (str.length < 16) {\n        console.log(\"onclick\");\n\n        _this.setState({\n          cardImage: \"\",\n          specialText: \"\"\n        });\n      }\n\n      var _id = event.target.id;\n\n      _this.setState({\n        id: _id\n      });\n\n      _this.props.swapCard({\n        id: _id\n      });\n    };\n\n    _this.callValidator = function () {\n      var creditCard = {\n        number: _this.props.cardNumber2,\n        name: 'cardNumber'\n      };\n\n      var str = _this.props.cardNumber2.toString();\n\n      if (!creditCardValidator(creditCard)) {\n        _this.setState({\n          specialText: \"invalid number\",\n          error_state: true\n        });\n      } else {\n        _this.setState({\n          specialText: '',\n          error_state: false\n        });\n\n        if (str.charAt(0) === '4') {\n          _this.setState({\n            cardImage: \"https://img.icons8.com/color/48/000000/visa.png\"\n          });\n        }\n\n        if (str.charAt(0) === '5') {\n          _this.setState({\n            cardImage: \"https://img.icons8.com/color/48/000000/mastercard.png\"\n          });\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(FilledTextFields, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var cardNum = this.props.cardNumber2.toString();\n      var length_cardNum = cardNum.length;\n      var dateNum = this.props.expireDate.toString();\n      var length_date = dateNum.length;\n      var cvc = this.props.securityCode.toString();\n      var length_cvc = cvc.length;\n      return React.createElement(\"form\", {\n        className: classes.container,\n        noValidate: true,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"cardNumber\",\n        label: \"Card Number\",\n        name: \"cardNumber\",\n        type: \"number\",\n        style: {\n          margin: 8\n        },\n        placeholder: \"Placeholder\",\n        fullWidth: true,\n        margin: \"normal\",\n        variant: \"outlined\",\n        InputLabelProps: {\n          shrink: true\n        },\n        onClick: this.onClickOnTextField,\n        onChange: this.handleChange,\n        onBlur: this.callValidator,\n        helperText: this.state.specialText,\n        error: this.state.error_state,\n        onInput: function onInput(e) {\n          e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 16);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        src: this.state.cardImage,\n        alt: \"Card-Type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"filled-dense\",\n        label: \"Name\",\n        name: \"cardName\",\n        style: {\n          margin: 8\n        },\n        placeholder: \"Placeholder\",\n        helperText: \"\",\n        fullWidth: true,\n        margin: \"normal\",\n        variant: \"outlined\",\n        InputLabelProps: {\n          shrink: true\n        },\n        onClick: this.onClickOnTextField,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"filled-dense\",\n        label: \"Expire Date\",\n        name: \"expireDate\",\n        type: \"number\",\n        className: classes.textField,\n        helperText: \"Some important text\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        onClick: this.onClickOnTextField,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"dense\",\n        label: \"CVC\",\n        name: \"cardSecurityCode\",\n        className: classes.textField,\n        helperText: \"Some important text\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        onClick: this.onClickOnTextField,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      })))), React.createElement(NumberFormat, {\n        customInput: TextField,\n        format: \"#### #### #### ####\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return FilledTextFields;\n}(React.Component);\n\nvar mapActionsToProps = function mapActionsToProps(dispatch, props) {\n  console.log(\"dispatch calling\");\n  return bindActionCreators({\n    swapCard: swapCard,\n    updateCardValues: updateCardValues\n  }, dispatch);\n};\n\nFilledTextFields.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nvar CardDef = withStyles(styles)(FilledTextFields);\nexport default connect(null, mapActionsToProps)(CardDef);","map":{"version":3,"sources":["/home/shehand/Documents/Noetic/creditcard-validator/src/Component/cardDetails.js"],"names":["React","PropTypes","withStyles","TextField","connect","swapCard","updateCardValues","bindActionCreators","creditCardValidator","NumberFormat","styles","theme","container","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","dense","marginTop","menu","width","FilledTextFields","state","specialText","error_state","cardImage","cardNumber","handleChange","event","name","target","re","value","test","console","log","payload","props","onKeyDown","keyCode","onClickOnTextField","str","cardNumber2","toString","length","setState","_id","id","callValidator","creditCard","number","charAt","classes","cardNum","length_cardNum","dateNum","expireDate","length_date","cvc","securityCode","length_cvc","margin","shrink","e","Math","max","parseInt","slice","Component","mapActionsToProps","dispatch","propTypes","object","isRequired","CardDef"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { connect } from \"react-redux\";\nimport {swapCard} from '../action/textfield-onclick-action'\nimport {updateCardValues} from  '../action/update-cardvalue-action';\nimport { bindActionCreators } from \"redux\";\nimport {creditCardValidator} from '../service/validator';\nimport NumberFormat from 'react-number-format';\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  dense: {\n    marginTop: 16,\n  },\n  menu: {\n    width: 200,\n  },\n});\n\n\nclass FilledTextFields extends React.Component {\n\n  state = {\n    specialText:\"\" ,\n    error_state:false,\n    cardImage :\"\",\n    cardNumber:0\n  }\n\n  \n  handleChange = (event)=> {\n      var name = event.target.name;\n      const re = /^[0-9\\b]+$/;\n      if((event.target.value === '' ||re.test(event.target.value)) && name === 'cardNumber' ){\n        let value = event.target.value;\n        console.log(value);\n        var payload = {\n          name:name,\n          value:value\n        }\n        this.props.updateCardValues(payload);\n      }\n      if( name === 'cardName'){\n        payload = {\n          name:name,\n          value:event.target.value\n        }\n        this.props.updateCardValues(payload);\n      }\n      if( name === 'expireDate'){\n        payload = {\n          name:name,\n          value:event.target.value\n        }\n        this.props.updateCardValues(payload);\n      } \n      if( name === 'cardSecurityCode'){\n        payload = {\n          name:name,\n          value:event.target.value\n        }\n        this.props.updateCardValues(payload);\n      }  \n  }\n\n  onKeyDown = (event)=>{\n    var name = event.target.name;\n    if (event.keyCode === 8) {\n      var payload = {\n        name:name,\n        value:0\n      }\n      this.props.updateCardValues(payload);\n    }\n    \n\n  }\n\n\n  onClickOnTextField =(event)=>{\n    var str = this.props.cardNumber2.toString();\n    if(str.length<16){\n      console.log(\"onclick\")\n      this.setState({cardImage :\"\",specialText:\"\",})\n    } \n    var _id = event.target.id;\n    this.setState({\n      id:_id\n    })\n    this.props.swapCard({id:_id});\n  }\n  \n  callValidator=()=>{  \n    var creditCard = {\n      number:this.props.cardNumber2,\n      name:'cardNumber'\n    }\n    var str = this.props.cardNumber2.toString();\n\n      if(!creditCardValidator(creditCard)){\n        this.setState({specialText:\"invalid number\",error_state:true});\n      }\n      else{\n        this.setState({specialText:'',error_state:false});\n        if(str.charAt(0) === '4'){\n\n          this.setState({cardImage:\"https://img.icons8.com/color/48/000000/visa.png\"})\n          \n        }\n        if(str.charAt(0) === '5'){\n          this.setState({cardImage:\"https://img.icons8.com/color/48/000000/mastercard.png\"})\n      \n        }\n      }\n    }\n    \n    \n\n  render() {\n    const { classes } = this.props;\n    var cardNum = this.props.cardNumber2.toString();\n    var length_cardNum = cardNum.length;\n\n    var dateNum = this.props.expireDate.toString();\n    var length_date = dateNum.length;\n    \n    var cvc = this.props.securityCode.toString();\n    var length_cvc = cvc.length;\n   \n    return (\n      <form className={classes.container} noValidate autoComplete=\"off\">\n\n        <TextField\n        id=\"cardNumber\"\n        label=\"Card Number\"\n        name = \"cardNumber\"\n        type = \"number\"\n        style={{ margin: 8 }}\n        placeholder=\"Placeholder\"\n        fullWidth\n        margin=\"normal\"\n        variant=\"outlined\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onClick={this.onClickOnTextField}\n        onChange ={this.handleChange}\n        onBlur ={this.callValidator}\n        helperText={this.state.specialText}\n        error = {this.state.error_state}\n        onInput = {(e) =>{\n          e.target.value = Math.max(0, parseInt(e.target.value) ).toString().slice(0,16)\n        }}\n       />\n       \n    \n        <img src = {this.state.cardImage} alt=\"Card-Type\"/>\n   \n        <TextField\n        id=\"filled-dense\"\n        label=\"Name\"\n        name=\"cardName\"\n        style={{ margin: 8 }}\n        placeholder=\"Placeholder\"\n        helperText=\"\"\n        fullWidth\n        margin=\"normal\"\n        variant=\"outlined\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onClick={this.onClickOnTextField}\n        onChange ={this.handleChange} \n        />\n  \n      <table>\n        <tr>\n          <td>\n            <TextField\n            id=\"filled-dense\"\n            label=\"Expire Date\"\n            name=\"expireDate\"\n            type=\"number\"\n            className={classes.textField}\n            helperText=\"Some important text\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            onClick={this.onClickOnTextField}\n            onChange ={this.handleChange}\n            />\n          </td>\n          <td>\n            <TextField\n            id=\"dense\"\n            label=\"CVC\"\n            name=\"cardSecurityCode\"\n            className={classes.textField}\n            helperText=\"Some important text\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            onClick={this.onClickOnTextField}\n            onChange ={this.handleChange}\n            />\n          </td>\n        </tr>\n      </table>\n      <NumberFormat customInput={TextField\n      \n      } format=\"#### #### #### ####\"/>\n    </form>\n    );\n  }\n}\nconst mapActionsToProps = (dispatch, props) =>{\n  console.log(\"dispatch calling\")\n  return bindActionCreators ({\n    swapCard: swapCard,\n    updateCardValues: updateCardValues\n\n  },\n  dispatch\n  );\n  \n}\n\n\nFilledTextFields.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst CardDef = withStyles(styles)(FilledTextFields);\n\n\nexport default connect(null,mapActionsToProps)(CardDef);"]},"metadata":{},"sourceType":"module"}