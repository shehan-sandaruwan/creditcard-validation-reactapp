{"ast":null,"code":"import lunh from \"luhn\";\nimport cardDetails from \"../Component/cardDetails\";\nexport var creditCardValidator = function creditCardValidator(creditCard) {\n  var luhn = lunh;\n\n  if (creditCard.name === \"cardNumber\") {\n    var is_valid = luhn.validate(creditCard.value.toString());\n    console.log(\"validator is calling\", is_valid);\n    return is_valid;\n  }\n\n  if (creditCard.name === \"expireDate\") {\n    var normalizeYear = function normalizeYear(year) {\n      // Century fix\n      var YEARS_AHEAD = 20;\n\n      if (year < 100) {\n        var nowYear = new Date().getFullYear();\n        year += Math.floor(nowYear / 100) * 100;\n\n        if (year > nowYear + YEARS_AHEAD) {\n          year -= 100;\n        } else if (year <= nowYear - 100 + YEARS_AHEAD) {\n          year += 100;\n        }\n      }\n\n      return year;\n    };\n\n    var checkExp = function checkExp(date) {\n      var re = /^\\s*(0?[1-9]|1[0-2])\\/(\\d\\d|\\d{4})\\s*$/;\n      var match = re.test(date);\n\n      if (!match) {\n        return false;\n      }\n\n      var exp = new Date(normalizeYear(1 * match[2]), 1 * match[1] - 1, 1).valueOf();\n      var now = new Date();\n      var currMonth = new Date(now.getFullYear(), now.getMonth(), 1).valueOf();\n\n      if (exp <= currMonth) {\n        console.log(\"true\");\n        return true;\n      } else {\n        console.log(\"false\");\n        alert(\"Expired\");\n        return false;\n      }\n    };\n\n    checkExp(\"12/25\");\n  }\n\n  if (creditCard.name === \"cardSecurityCode\") {\n    var re = /^[0-9]{3,4}$/;\n    var valid = re.test(creditCard.value);\n\n    if (valid) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n};","map":{"version":3,"sources":["/home/shehand/Documents/Noetic-Usecase/creditcard-validator/src/service/validator.js"],"names":["lunh","cardDetails","creditCardValidator","creditCard","luhn","name","is_valid","validate","value","toString","console","log","normalizeYear","year","YEARS_AHEAD","nowYear","Date","getFullYear","Math","floor","checkExp","date","re","match","test","exp","valueOf","now","currMonth","getMonth","alert","valid"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,UAAU,EAAI;AAC/C,MAAIC,IAAI,GAAGJ,IAAX;;AACA,MAAIG,UAAU,CAACE,IAAX,KAAoB,YAAxB,EAAsC;AACpC,QAAIC,QAAQ,GAAGF,IAAI,CAACG,QAAL,CAAcJ,UAAU,CAACK,KAAX,CAAiBC,QAAjB,EAAd,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCL,QAApC;AACA,WAAOA,QAAP;AACD;;AACD,MAAIH,UAAU,CAACE,IAAX,KAAoB,YAAxB,EAAsC;AAAA,QAG3BO,aAH2B,GAGpC,SAASA,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B;AACA,UAAIC,WAAW,GAAG,EAAlB;;AACA,UAAID,IAAI,GAAG,GAAX,EAAgB;AACd,YAAIE,OAAO,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAd;AACAJ,QAAAA,IAAI,IAAIK,IAAI,CAACC,KAAL,CAAWJ,OAAO,GAAG,GAArB,IAA4B,GAApC;;AACA,YAAIF,IAAI,GAAGE,OAAO,GAAGD,WAArB,EAAkC;AAChCD,UAAAA,IAAI,IAAI,GAAR;AACD,SAFD,MAEO,IAAIA,IAAI,IAAIE,OAAO,GAAG,GAAV,GAAgBD,WAA5B,EAAyC;AAC9CD,UAAAA,IAAI,IAAI,GAAR;AACD;AACF;;AACD,aAAOA,IAAP;AACD,KAhBmC;;AAAA,QAkB3BO,QAlB2B,GAkBpC,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,UAAIC,EAAE,GAAG,wCAAT;AACA,UAAIC,KAAK,GAAGD,EAAE,CAACE,IAAH,CAAQH,IAAR,CAAZ;;AACA,UAAI,CAACE,KAAL,EAAY;AACV,eAAO,KAAP;AACD;;AACD,UAAIE,GAAG,GAAG,IAAIT,IAAJ,CACRJ,aAAa,CAAC,IAAIW,KAAK,CAAC,CAAD,CAAV,CADL,EAER,IAAIA,KAAK,CAAC,CAAD,CAAT,GAAe,CAFP,EAGR,CAHQ,EAIRG,OAJQ,EAAV;AAKA,UAAIC,GAAG,GAAG,IAAIX,IAAJ,EAAV;AACA,UAAIY,SAAS,GAAG,IAAIZ,IAAJ,CAASW,GAAG,CAACV,WAAJ,EAAT,EAA4BU,GAAG,CAACE,QAAJ,EAA5B,EAA4C,CAA5C,EAA+CH,OAA/C,EAAhB;;AACA,UAAID,GAAG,IAAIG,SAAX,EAAsB;AACpBlB,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,eAAO,IAAP;AACD,OAHD,MAGO;AACLD,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAmB,QAAAA,KAAK,CAAC,SAAD,CAAL;AACA,eAAO,KAAP;AACD;AACF,KAvCmC;;AACpCV,IAAAA,QAAQ,CAAC,OAAD,CAAR;AAuCD;;AACD,MAAIjB,UAAU,CAACE,IAAX,KAAoB,kBAAxB,EAA4C;AAC1C,QAAIiB,EAAE,GAAG,cAAT;AACA,QAAIS,KAAK,GAAGT,EAAE,CAACE,IAAH,CAAQrB,UAAU,CAACK,KAAnB,CAAZ;;AACA,QAAIuB,KAAJ,EAAW;AACT,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAP;AACD;AACF;AACF,CAzDM","sourcesContent":["import lunh from \"luhn\";\nimport cardDetails from \"../Component/cardDetails\";\n\nexport const creditCardValidator = creditCard => {\n  var luhn = lunh;\n  if (creditCard.name === \"cardNumber\") {\n    var is_valid = luhn.validate(creditCard.value.toString());\n    console.log(\"validator is calling\", is_valid);\n    return is_valid;\n  }\n  if (creditCard.name === \"expireDate\") {\n    checkExp(\"12/25\");\n\n    function normalizeYear(year) {\n      // Century fix\n      var YEARS_AHEAD = 20;\n      if (year < 100) {\n        var nowYear = new Date().getFullYear();\n        year += Math.floor(nowYear / 100) * 100;\n        if (year > nowYear + YEARS_AHEAD) {\n          year -= 100;\n        } else if (year <= nowYear - 100 + YEARS_AHEAD) {\n          year += 100;\n        }\n      }\n      return year;\n    }\n\n    function checkExp(date) {\n      var re = /^\\s*(0?[1-9]|1[0-2])\\/(\\d\\d|\\d{4})\\s*$/;\n      var match = re.test(date);\n      if (!match) {\n        return false;\n      }\n      var exp = new Date(\n        normalizeYear(1 * match[2]),\n        1 * match[1] - 1,\n        1\n      ).valueOf();\n      var now = new Date();\n      var currMonth = new Date(now.getFullYear(), now.getMonth(), 1).valueOf();\n      if (exp <= currMonth) {\n        console.log(\"true\");\n        return true;\n      } else {\n        console.log(\"false\");\n        alert(\"Expired\");\n        return false;\n      }\n    }\n  }\n  if (creditCard.name === \"cardSecurityCode\") {\n    var re = /^[0-9]{3,4}$/;\n    var valid = re.test(creditCard.value);\n    if (valid) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}