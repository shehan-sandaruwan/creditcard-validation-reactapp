{"ast":null,"code":"import { SWAP_CARD_FRONT, SWAP_CARD_BACK } from '../constant/action-type';\n\nfunction rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SWAP_CARD_BACK:\n      var newState1 = Object.assign({}, state, {\n        frontSide: false,\n        backSide: true\n      });\n      console.log(\"new State1\", newState1);\n      return newState1;\n\n    case SWAP_CARD_FRONT:\n      var newState2 = Object.assign({}, state, {\n        frontSide: true,\n        backSide: false\n      });\n      console.log(\"new State2\", newState2);\n      return newState2;\n\n    default:\n      return state;\n  }\n}\n\n;\nexport default rootReducer;","map":{"version":3,"sources":["/home/shehand/Documents/Noetic/creditcard-validator/src/reducer/index.js"],"names":["SWAP_CARD_FRONT","SWAP_CARD_BACK","rootReducer","state","action","type","newState1","Object","assign","frontSide","backSide","console","log","newState2"],"mappings":"AAAA,SACEA,eADF,EAEEC,cAFF,QAGO,yBAHP;;AAME,SAASC,WAAT,GAAyC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACvC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKJ,cAAL;AACE,UAAIK,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBL,KAAjB,EAAuB;AAACM,QAAAA,SAAS,EAAC,KAAX;AAAiBC,QAAAA,QAAQ,EAAC;AAA1B,OAAvB,CAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBN,SAAzB;AACA,aAAOA,SAAP;;AACF,SAAKN,eAAL;AACE,UAAIa,SAAS,GAAGN,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBL,KAAjB,EAAuB;AAACM,QAAAA,SAAS,EAAC,IAAX;AAAgBC,QAAAA,QAAQ,EAAC;AAAzB,OAAvB,CAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBC,SAAzB;AACA,aAAOA,SAAP;;AACF;AACI,aAAOV,KAAP;AAVN;AAaD;;AAAA;AACD,eAAeD,WAAf","sourcesContent":["import {\n  SWAP_CARD_FRONT,\n  SWAP_CARD_BACK\n} from '../constant/action-type';\n\n\n  function rootReducer(state = {}, action) {\n    switch(action.type){\n      case SWAP_CARD_BACK:\n        let newState1 = Object.assign({},state,{frontSide:false,backSide:true});\n        console.log(\"new State1\",newState1);\n        return newState1;\n      case SWAP_CARD_FRONT:\n        let newState2 = Object.assign({},state,{frontSide:true,backSide:false});\n        console.log(\"new State2\",newState2);\n        return newState2;\n      default:\n          return state;\n    }\n\n  };\n  export default rootReducer;"]},"metadata":{},"sourceType":"module"}