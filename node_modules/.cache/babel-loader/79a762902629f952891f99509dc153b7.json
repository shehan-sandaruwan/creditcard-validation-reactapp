{"ast":null,"code":"import _classCallCheck from \"/home/shehand/Documents/Noetic-Usecase/creditcard-validator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shehand/Documents/Noetic-Usecase/creditcard-validator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shehand/Documents/Noetic-Usecase/creditcard-validator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shehand/Documents/Noetic-Usecase/creditcard-validator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shehand/Documents/Noetic-Usecase/creditcard-validator/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/shehand/Documents/Noetic-Usecase/creditcard-validator/src/Component/cardDetails.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport { swapCard } from \"../action/textfield-onclick-action\";\nimport { updateCardValues } from \"../action/update-cardvalue-action\";\nimport { bindActionCreators } from \"redux\";\nimport { creditCardValidator } from \"../service/validator\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport InputMask from \"react-input-mask\";\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit\n    },\n    dense: {\n      marginTop: 16\n    },\n    menu: {\n      width: 200\n    }\n  };\n};\n\nvar FilledTextFields =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FilledTextFields, _React$Component);\n\n  function FilledTextFields() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FilledTextFields);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FilledTextFields)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      specialText_cardNumber: \"\",\n      specialText_cardName: \"\",\n      specialText_cardDate: \"\",\n      specialText_cardCVC: \"\",\n      error_state_cardNumber: false,\n      error_state_cardName: false,\n      error_state_cardDate: false,\n      error_state_cardCVC: false,\n      cardImage: \"https://img.icons8.com/ios/48/000000/bank-card-back-side.png\",\n      cardNumber: null,\n      error: false\n    };\n\n    _this.handleChange = function (event) {\n      var name = event.target.name;\n      var re = /^[0-9\\b]+$/;\n\n      if ((event.target.value === \"\" || re.test(event.target.value)) && name === \"cardNumber\") {\n        var value = event.target.value;\n        console.log(\"isnan\", value);\n        var payload = {\n          name: name,\n          value: value\n        };\n\n        _this.props.updateCardValues(payload);\n      }\n\n      if (name === \"cardName\") {\n        payload = {\n          name: name,\n          value: event.target.value\n        };\n\n        _this.props.updateCardValues(payload);\n      }\n\n      if (name === \"expireDate\") {\n        payload = {\n          name: name,\n          value: event.target.value\n        };\n\n        _this.props.updateCardValues(payload);\n      }\n\n      if (name === \"cardSecurityCode\") {\n        payload = {\n          name: name,\n          value: event.target.value,\n          state: !_this.state.error_state_cardCVC && !_this.state.error_state_cardDate && !_this.state.error_state_cardName && !_this.state.error_state_cardNumber\n        };\n\n        _this.props.updateCardValues(payload);\n      }\n    };\n\n    _this.onClickOnTextField = function (event) {\n      var str = _this.props.cardNumber2.toString();\n\n      if (str.length < 16) {\n        console.log(\"onclick\");\n\n        _this.setState({\n          cardImage: \"https://img.icons8.com/ios/48/000000/bank-card-back-side.png\",\n          specialText_cardNumber: \"\",\n          specialText_cardName: \"\",\n          specialText_cardDate: \"\",\n          specialText_cardCVC: \"\"\n        });\n      }\n\n      var _id = event.target.id;\n\n      _this.setState({\n        id: _id\n      });\n\n      _this.props.swapCard({\n        id: _id\n      });\n    };\n\n    _this.callValidator = function (event) {\n      var name = event.target.name;\n      var expireDate_str = _this.props.expireDate;\n      var date = \"\";\n      var creditCard = {\n        value: _this.props.cardNumber2,\n        name: name\n      };\n\n      if (name === \"cardNumber\") {\n        if (!creditCardValidator(creditCard) || creditCard.value.toString().length === 0) {\n          _this.setState({\n            specialText_cardNumber: \"invalid number\",\n            error_state_cardNumber: true,\n            error: true,\n            cardImage: \"https://img.icons8.com/ios/48/000000/bank-card-back-side.png\",\n            cardNumber: _this.props.cardNumber2\n          });\n        } else {\n          _this.setState({\n            specialText_cardNumber: \"\",\n            error_state_cardNumber: false\n          });\n\n          var str = _this.props.cardNumber2.toString();\n\n          if (str.charAt(0) === \"4\") {\n            _this.setState({\n              cardImage: \"https://img.icons8.com/color/48/000000/visa.png\"\n            });\n          }\n\n          if (str.charAt(0) === \"5\") {\n            _this.setState({\n              cardImage: \"https://img.icons8.com/color/48/000000/mastercard.png\"\n            });\n          }\n        }\n      }\n\n      if (name === \"cardName\") {\n        console.log(\"card name\", event.target.value.length);\n\n        if (event.target.value.length === 0) {\n          _this.setState({\n            specialText_cardName: \"Name is required\",\n            error_state_cardName: true,\n            error: true\n          });\n        } else {\n          _this.setState({\n            specialText_cardName: \"\",\n            error_state_cardName: false,\n            error: false\n          });\n        }\n      }\n\n      if (name === \"expireDate\") {\n        var date = \"\";\n\n        if (expireDate_str.length === 4) {\n          for (var i = 0; i < expireDate_str.length; i++) {\n            date += expireDate_str.charAt(i);\n\n            if (i === 1) {\n              date += \"/\";\n            }\n          }\n        }\n\n        console.log(\"date\", date);\n        creditCard = {\n          value: date,\n          name: name\n        };\n\n        if (!creditCardValidator(creditCard) || date.length < 4) {\n          _this.setState({\n            specialText_cardDate: \"invalid date\",\n            error_state_cardDate: true,\n            error: true\n          });\n        } else {\n          _this.setState({\n            specialText_cardDate: \"\",\n            error_state_cardDate: false,\n            error: false\n          });\n        }\n      }\n\n      if (name === \"cardSecurityCode\") {\n        creditCard = {\n          value: event.target.value,\n          name: name\n        };\n\n        if (!creditCardValidator(creditCard) || creditCard.value < 3) {\n          _this.setState({\n            specialText_cardCVC: \"invalid CVC\",\n            error_state_cardCVC: true,\n            error: true\n          });\n        } else {\n          _this.setState({\n            specialText_cardCVC: \"\",\n            error_state_cardCVC: false,\n            error: false\n          });\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(FilledTextFields, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"form\", {\n        className: classes.container,\n        noValidate: true,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"cardNumber\",\n        label: \"Card Number\",\n        name: \"cardNumber\",\n        type: \"number\",\n        style: {\n          margin: 8\n        },\n        fullWidth: true,\n        margin: \"normal\",\n        variant: \"outlined\",\n        InputLabelProps: {\n          shrink: true\n        },\n        onClick: this.onClickOnTextField,\n        onChange: this.handleChange,\n        onBlur: this.callValidator,\n        helperText: this.state.specialText_cardNumber,\n        error: this.state.error_state_cardNumber,\n        onInput: function onInput(e) {\n          e.target.value = Math.max(0, e.target.value).toString().slice(0, 16);\n        },\n        InputProps: {\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 243\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: this.state.cardImage,\n            alt: \"Card-Type\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 244\n            },\n            __self: this\n          }))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(InputMask, {\n        mask: \"9999 9999 9999 9999\",\n        maskChar: \" \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      })), React.createElement(TextField, {\n        id: \"filled-dense\",\n        label: \"Name\",\n        name: \"cardName\",\n        style: {\n          margin: 8\n        },\n        fullWidth: true,\n        margin: \"normal\",\n        variant: \"outlined\",\n        InputLabelProps: {\n          shrink: true\n        },\n        onClick: this.onClickOnTextField,\n        onBlur: this.callValidator,\n        helperText: this.state.specialText_cardName,\n        error: this.state.error_state_cardName,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"filled-dense\",\n        label: \"Expire Date\",\n        name: \"expireDate\",\n        type: \"string\",\n        className: classes.textField,\n        margin: \"normal\",\n        variant: \"outlined\",\n        onClick: this.onClickOnTextField,\n        onBlur: this.callValidator,\n        helperText: this.state.specialText_cardDate,\n        error: this.state.error_state_cardDate,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"dense\",\n        label: \"CVC\",\n        name: \"cardSecurityCode\",\n        type: \"string\",\n        className: classes.textField,\n        margin: \"normal\",\n        variant: \"outlined\",\n        onClick: this.onClickOnTextField,\n        onBlur: this.callValidator,\n        helperText: this.state.specialText_cardCVC,\n        error: this.state.error_state_cardCVC,\n        onChange: this.handleChange,\n        onInput: function onInput(e) {\n          e.target.value = Math.max(0, e.target.value).toString().slice(0, 4);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return FilledTextFields;\n}(React.Component);\n\nvar mapActionsToProps = function mapActionsToProps(dispatch, props) {\n  console.log(\"dispatch calling\");\n  return bindActionCreators({\n    swapCard: swapCard,\n    updateCardValues: updateCardValues\n  }, dispatch);\n};\n\nFilledTextFields.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nvar CardDef = withStyles(styles)(FilledTextFields);\nexport default connect(null, mapActionsToProps)(CardDef);","map":{"version":3,"sources":["/home/shehand/Documents/Noetic-Usecase/creditcard-validator/src/Component/cardDetails.js"],"names":["React","PropTypes","withStyles","TextField","connect","swapCard","updateCardValues","bindActionCreators","creditCardValidator","InputAdornment","InputMask","styles","theme","container","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","dense","marginTop","menu","width","FilledTextFields","state","specialText_cardNumber","specialText_cardName","specialText_cardDate","specialText_cardCVC","error_state_cardNumber","error_state_cardName","error_state_cardDate","error_state_cardCVC","cardImage","cardNumber","error","handleChange","event","name","target","re","value","test","console","log","payload","props","onClickOnTextField","str","cardNumber2","toString","length","setState","_id","id","callValidator","expireDate_str","expireDate","date","creditCard","charAt","i","classes","margin","shrink","e","Math","max","slice","endAdornment","Component","mapActionsToProps","dispatch","propTypes","object","isRequired","CardDef"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport { swapCard } from \"../action/textfield-onclick-action\";\nimport { updateCardValues } from \"../action/update-cardvalue-action\";\nimport { bindActionCreators } from \"redux\";\nimport { creditCardValidator } from \"../service/validator\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport InputMask from \"react-input-mask\";\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  },\n  dense: {\n    marginTop: 16\n  },\n  menu: {\n    width: 200\n  }\n});\n\nclass FilledTextFields extends React.Component {\n  state = {\n    specialText_cardNumber: \"\",\n    specialText_cardName: \"\",\n    specialText_cardDate: \"\",\n    specialText_cardCVC: \"\",\n    error_state_cardNumber: false,\n    error_state_cardName: false,\n    error_state_cardDate: false,\n    error_state_cardCVC: false,\n    cardImage: \"https://img.icons8.com/ios/48/000000/bank-card-back-side.png\",\n    cardNumber: null,\n    error: false\n  };\n\n  handleChange = event => {\n    var name = event.target.name;\n    const re = /^[0-9\\b]+$/;\n    if (\n      (event.target.value === \"\" || re.test(event.target.value)) &&\n      name === \"cardNumber\"\n    ) {\n      let value = event.target.value;\n      console.log(\"isnan\", value);\n      var payload = {\n        name: name,\n        value: value\n      };\n      this.props.updateCardValues(payload);\n    }\n    if (name === \"cardName\") {\n      payload = {\n        name: name,\n        value: event.target.value\n      };\n      this.props.updateCardValues(payload);\n    }\n    if (name === \"expireDate\") {\n      payload = {\n        name: name,\n        value: event.target.value\n      };\n      this.props.updateCardValues(payload);\n    }\n    if (name === \"cardSecurityCode\") {\n      payload = {\n        name: name,\n        value: event.target.value,\n        state:\n          !this.state.error_state_cardCVC &&\n          !this.state.error_state_cardDate &&\n          !this.state.error_state_cardName &&\n          !this.state.error_state_cardNumber\n      };\n      this.props.updateCardValues(payload);\n    }\n  };\n\n  onClickOnTextField = event => {\n    var str = this.props.cardNumber2.toString();\n    if (str.length < 16) {\n      console.log(\"onclick\");\n      this.setState({\n        cardImage:\n          \"https://img.icons8.com/ios/48/000000/bank-card-back-side.png\",\n        specialText_cardNumber: \"\",\n        specialText_cardName: \"\",\n        specialText_cardDate: \"\",\n        specialText_cardCVC: \"\"\n      });\n    }\n    var _id = event.target.id;\n    this.setState({\n      id: _id\n    });\n    this.props.swapCard({ id: _id });\n  };\n\n  callValidator = event => {\n    var name = event.target.name;\n    var expireDate_str = this.props.expireDate;\n    var date = \"\";\n\n    var creditCard = {\n      value: this.props.cardNumber2,\n      name: name\n    };\n\n    if (name === \"cardNumber\") {\n      if (\n        !creditCardValidator(creditCard) ||\n        creditCard.value.toString().length === 0\n      ) {\n        this.setState({\n          specialText_cardNumber: \"invalid number\",\n          error_state_cardNumber: true,\n          error: true,\n          cardImage:\n            \"https://img.icons8.com/ios/48/000000/bank-card-back-side.png\",\n          cardNumber: this.props.cardNumber2\n        });\n      } else {\n        this.setState({\n          specialText_cardNumber: \"\",\n          error_state_cardNumber: false\n        });\n        var str = this.props.cardNumber2.toString();\n        if (str.charAt(0) === \"4\") {\n          this.setState({\n            cardImage: \"https://img.icons8.com/color/48/000000/visa.png\"\n          });\n        }\n        if (str.charAt(0) === \"5\") {\n          this.setState({\n            cardImage: \"https://img.icons8.com/color/48/000000/mastercard.png\"\n          });\n        }\n      }\n    }\n    if (name === \"cardName\") {\n      console.log(\"card name\", event.target.value.length);\n      if (event.target.value.length === 0) {\n        this.setState({\n          specialText_cardName: \"Name is required\",\n          error_state_cardName: true,\n          error: true\n        });\n      } else {\n        this.setState({\n          specialText_cardName: \"\",\n          error_state_cardName: false,\n          error: false\n        });\n      }\n    }\n    if (name === \"expireDate\") {\n      var date = \"\";\n      if (expireDate_str.length === 4) {\n        for (let i = 0; i < expireDate_str.length; i++) {\n          date += expireDate_str.charAt(i);\n          if (i === 1) {\n            date += \"/\";\n          }\n        }\n      }\n      console.log(\"date\", date);\n      creditCard = {\n        value: date,\n        name: name\n      };\n      if (!creditCardValidator(creditCard) || date.length < 4) {\n        this.setState({\n          specialText_cardDate: \"invalid date\",\n          error_state_cardDate: true,\n          error: true\n        });\n      } else {\n        this.setState({\n          specialText_cardDate: \"\",\n          error_state_cardDate: false,\n          error: false\n        });\n      }\n    }\n    if (name === \"cardSecurityCode\") {\n      creditCard = {\n        value: event.target.value,\n        name: name\n      };\n      if (!creditCardValidator(creditCard) || creditCard.value < 3) {\n        this.setState({\n          specialText_cardCVC: \"invalid CVC\",\n          error_state_cardCVC: true,\n          error: true\n        });\n      } else {\n        this.setState({\n          specialText_cardCVC: \"\",\n          error_state_cardCVC: false,\n          error: false\n        });\n      }\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <form className={classes.container} noValidate autoComplete=\"off\">\n        <TextField\n          id=\"cardNumber\"\n          label=\"Card Number\"\n          name=\"cardNumber\"\n          type=\"number\"\n          style={{ margin: 8 }}\n          fullWidth\n          margin=\"normal\"\n          variant=\"outlined\"\n          InputLabelProps={{\n            shrink: true\n          }}\n          onClick={this.onClickOnTextField}\n          onChange={this.handleChange}\n          onBlur={this.callValidator}\n          helperText={this.state.specialText_cardNumber}\n          error={this.state.error_state_cardNumber}\n          onInput={e => {\n            e.target.value = Math.max(0, e.target.value)\n              .toString()\n              .slice(0, 16);\n          }}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <img src={this.state.cardImage} alt=\"Card-Type\" />\n              </InputAdornment>\n            )\n          }}\n        >\n          <InputMask mask=\"9999 9999 9999 9999\" maskChar=\" \" />\n        </TextField>\n        <TextField\n          id=\"filled-dense\"\n          label=\"Name\"\n          name=\"cardName\"\n          style={{ margin: 8 }}\n          fullWidth\n          margin=\"normal\"\n          variant=\"outlined\"\n          InputLabelProps={{\n            shrink: true\n          }}\n          onClick={this.onClickOnTextField}\n          onBlur={this.callValidator}\n          helperText={this.state.specialText_cardName}\n          error={this.state.error_state_cardName}\n          onChange={this.handleChange}\n        />\n\n        <table>\n          <tr>\n            <td>\n              <TextField\n                id=\"filled-dense\"\n                label=\"Expire Date\"\n                name=\"expireDate\"\n                type=\"string\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                onClick={this.onClickOnTextField}\n                onBlur={this.callValidator}\n                helperText={this.state.specialText_cardDate}\n                error={this.state.error_state_cardDate}\n                onChange={this.handleChange}\n              />\n            </td>\n            <td>\n              <TextField\n                id=\"dense\"\n                label=\"CVC\"\n                name=\"cardSecurityCode\"\n                type=\"string\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                onClick={this.onClickOnTextField}\n                onBlur={this.callValidator}\n                helperText={this.state.specialText_cardCVC}\n                error={this.state.error_state_cardCVC}\n                onChange={this.handleChange}\n                onInput={e => {\n                  e.target.value = Math.max(0, e.target.value)\n                    .toString()\n                    .slice(0, 4);\n                }}\n              />\n            </td>\n          </tr>\n        </table>\n      </form>\n    );\n  }\n}\nconst mapActionsToProps = (dispatch, props) => {\n  console.log(\"dispatch calling\");\n  return bindActionCreators(\n    {\n      swapCard: swapCard,\n      updateCardValues: updateCardValues\n    },\n    dispatch\n  );\n};\n\nFilledTextFields.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst CardDef = withStyles(styles)(FilledTextFields);\n\nexport default connect(\n  null,\n  mapActionsToProps\n)(CardDef);\n"]},"metadata":{},"sourceType":"module"}